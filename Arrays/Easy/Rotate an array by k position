vector<int> rotateArray(vector<int>arr, int k) {
    // Write your code here.
    int n = arr.size() ;
    k = k%n ;
    int temp[k] ;

    //coping d elemets of the array to the temp
    for(int i = 0; i< k ; i++){
        temp[i] = arr[i] ;
    }


    // shifting rest element 
    for(int i = k ; i< n ; i++){
        arr[i-k] = arr[i] ;
    }

    // ading remainng ele to the last 
    for(int i = n-k ; i<n ; i++){
        arr[i] = temp[i-(n-k)] ;
    }

    return arr ;


}



*******------------------------------******----------------------******-----------------------******------------------*****------------------
other method is , 






#include <iostream>
#include<string>
#include<set> 
#include<vector>

using namespace std ; 

int main(){
    vector<int> v ={1,2,3,4,5,6,7} ;
    int n =  v.size() ;
    int d = 2 ;



    reverse(v.begin(), v.begin() + d);
    reverse(v.begin() + d, v.end());
    reverse(v.begin(), v.end());

    // Printing the rotated vector
    for (int i = 0; i < n; i++) {
        cout << v[i] << " ";
    }
;


return 0 ;
}
